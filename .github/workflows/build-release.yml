name: Build

on:
  workflow_call:
    inputs:
      release:
        description: 'release'
        type: boolean
        required: true

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    name: Build ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
        token: ${{secrets.GITHUB_TOKEN}}

    - uses: dtolnay/rust-toolchain@stable

    - name: Cache gcc-arm-none-eabi
      id: cache-gcc-arm-none-eabi
      uses: actions/cache@v3
      with:
        path: |
          ./toolchain
          ~/.rustup
          ~/.cargo
        key: ${{ runner.os }}-${{ matrix.os }}-gcc-arm-none-eabi-10.3-2021.10

    - name: gcc-arm-none-eabi Toolchain Setup
      if: startsWith(matrix.os, 'ubuntu') && steps.cache-gcc-arm-none-eabi.outputs.cache-hit != 'true'
      run: |
        cd toolchain
        rm -Rf gcc-arm-none-eabi/
        wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        tar xvf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        rm gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        mv gcc-arm-none-eabi-10.3-2021.10 gcc-arm-none-eabi
        touch gcc-arm-none-eabi/EMPTY

    - name: gcc-arm-none-eabi Toolchain Setup
      if: startsWith(matrix.os, 'macos') && steps.cache-gcc-arm-none-eabi.outputs.cache-hit != 'true'
      run: |
        cd toolchain
        rm -Rf gcc-arm-none-eabi/
        wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-mac.tar.bz2
        tar xvf gcc-arm-none-eabi-10.3-2021.10-mac.tar.bz2
        rm gcc-arm-none-eabi-10.3-2021.10-mac.tar.bz2
        mv gcc-arm-none-eabi-10.3-2021.10 gcc-arm-none-eabi
        touch gcc-arm-none-eabi/EMPTY

    - name: gcc-arm-none-eabi Toolchain Setup
      if: startsWith(matrix.os, 'windows') && steps.cache-gcc-arm-none-eabi.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        cd toolchain
        curl -L https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-win32.zip -o gcc-arm-none-eabi-10.3-2021.10-win32.zip
        Expand-Archive -Path ".\gcc-arm-none-eabi-10.3-2021.10-win32.zip"
        Copy-Item -Path ".\gcc-arm-none-eabi-10.3-2021.10-win32\gcc-arm-none-eabi-10.3-2021.10\*" -Destination ".\gcc-arm-none-eabi" -Recurse
        Remove-Item -Path ".\gcc-arm-none-eabi-10.3-2021.10-win32" -Recurse -Force
        Remove-Item .\gcc-arm-none-eabi-10.3-2021.10-win32.zip -Force

    - name: Build logue-sdk
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
      run: |
        # remove inline attribute for libnts1mkii.a
        pushd components/logue-sdk
        git apply ../logue_bind/script/louge-sdk-remove-inline.patch
        popd
        # build
        pushd components/logue_bind
        mkdir build && cd build
        cmake ..
        make
        cd ..
        nm dist/libnts1mkii.a | tee dist/libnts1mkii.obj.txt
        popd

    - name: Build Sound Unit
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
      run: |
        # build
        WITH_LOGUE_SDK_BINDGEN=true cargo build --release --target=thumbv7em-none-eabihf
        # distribute
        cargo xtask dist

    - name: Validate Sound Unit
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        # check
        readelf -a dist/osc_waves.nts1mkiiunit
        toolchain/gcc-arm-none-eabi/bin/arm-none-eabi-objdump -d dist/osc_waves.nts1mkiiunit
        # size check
        [ $(stat -c%s "dist/osc_waves.nts1mkiiunit") -le 49000 ]
        [ $(stat -c%s "dist/osc_dummy.nts1mkiiunit") -le 49000 ]
        [ $(stat -c%s "dist/osc_table32.nts1mkiiunit") -le 49000 ]

    - name: Validate Sound Unit
      if: startsWith(matrix.os, 'macos')
      run: |
        # check
        toolchain/gcc-arm-none-eabi/bin/arm-none-eabi-objdump -d dist/osc_waves.nts1mkiiunit
        # size check
        [ $(stat -c%s "dist/osc_waves.nts1mkiiunit") -le 49000 ]
        [ $(stat -c%s "dist/osc_dummy.nts1mkiiunit") -le 49000 ]
        [ $(stat -c%s "dist/osc_table32.nts1mkiiunit") -le 49000 ]

    - name: Validate Sound Unit
      if: startsWith(matrix.os, 'windows')
      shell: pwsh
      run: |
        # check
        toolchain/gcc-arm-none-eabi/bin/arm-none-eabi-objdump -d dist/osc_waves.nts1mkiiunit
        # size check
        (Get-Item "dist/osc_waves.nts1mkiiunit").length -gt 49000
        (Get-Item "dist/osc_dummy.nts1mkiiunit").length -gt 49000
        (Get-Item "dist/osc_table32.nts1mkiiunit").length -gt 49000

    - uses: ncipollo/release-action@v1
      if: ${{ inputs.release }} && startsWith(matrix.os, 'ubuntu')
      with:
          artifacts: "dist/*.nts1mkiiunit"
          token: ${{ secrets.GITHUB_TOKEN }}
